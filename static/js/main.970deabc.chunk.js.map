{"version":3,"sources":["components/main-menu.js","components/extensions-list.js","pages/extensions-list.js","components/form-buttons.js","forms/urls-settings.js","pages/urls-settings.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","menu","MenuDivider","Divider","MainMenu","state","current","handleClick","e","console","log","_this","setState","key","react_default","a","createElement","onClick","this","selectedKeys","mode","theme","style","lineHeight","Item","icon","type","title","Component","columns","dataIndex","render","record","name","defaultSortOrder","sorter","b","status","href","getRowClass","ExtensionsList","table","dataSource","rowClassName","pagination","expandedRowRender","additional","list","itemLayout","bordered","data","Object","keys","map","description","renderItem","item","Meta","tabList","tab","contentList","extensions","extensions_list_ExtensionsList","add","ExtensionsListPage","onTabChange","defineProperty","_this2","Fragment","es_button","marginBottom","es_alert","message","marginTop","card","activeTabKey","bodyStyle","padding","FormItem","es_form","FormButtons","htmlType","marginRight","loading","props","submitting","disabled","RadioGroup","es_radio","Group","defaults","resourceUrl","imageUploadUrl","extensionUrl","disableCss","forceSSL","verifySSL","formItemLayout","labelCol","xs","span","sm","wrapperCol","UrlsSettingsForm","handleSubmit","preventDefault","setTimeout","success","getFieldDecorator","form","onSubmit","form_buttons_FormButtons","urls_settings_FormItem","assign","label","initialValue","input","value","color","urls_settings","create","UrlsSettingsPage","Header","Content","App","showUrl","toggleView","prevState","layout","className","main_menu_MainMenu","textAlign","margin","fontSize","divider","urls_settings_UrlsSettingsPage","extensions_list_ExtensionsListPage","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.970deabc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuDivider = Menu.Divider;\n\nexport default class MainMenu extends Component {\n  state = {\n    current: 'contributions',\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode=\"horizontal\"\n        theme=\"dark\"\n        style={{ lineHeight: '64px' }}\n      >\n        <Menu.Item key=\"search\">\n          <Icon type=\"search\" /> Search\n        </Menu.Item>\n        <SubMenu key=\"contacts\" title={<span><Icon type=\"user\" /><span>Contacts</span></span>}>\n          <SubMenu key=\"new-individual\" title={<span>New Individual</span>}>\n            <Menu.Item key=\"new-student\">New Student</Menu.Item>\n            <Menu.Item key=\"new-parent\">New Parent</Menu.Item>\n            <Menu.Item key=\"new-staff\">New Staff</Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"new-household\">New Household</Menu.Item>\n          <SubMenu key=\"new-organization\" title={<span>New Organization</span>}>\n            <Menu.Item key=\"new-team\">New Team</Menu.Item>\n            <Menu.Item key=\"new-parent\">New Sponsor</Menu.Item>\n          </SubMenu>\n          <MenuDivider />\n          <Menu.Item key=\"contact-reports\">Contact reports</Menu.Item>\n          <MenuDivider />\n          <Menu.Item key=\"find-merge-duplicate\">Find and merge duplicate contacts</Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"contributions\">\n          <Icon type=\"credit-card\" /> Contributions\n        </Menu.Item>\n        <Menu.Item key=\"events\">\n          <Icon type=\"calendar\" /> Events\n        </Menu.Item>\n        <Menu.Item key=\"mailing\">\n          <Icon type=\"mail\" /> Mailing\n        </Menu.Item>\n        <Menu.Item key=\"memberships\">\n          <Icon type=\"idcard\" /> Memberships\n        </Menu.Item>\n        <Menu.Item key=\"reports\">\n          <Icon type=\"bar-chart\" /> Reports\n        </Menu.Item>\n        <Menu.Item key=\"administer\">\n          <Icon type=\"setting\" /> Administer\n        </Menu.Item>\n        <Menu.Item key=\"support\">\n          <Icon type=\"question-circle\" /> Support\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Table, List } from 'antd';\n\nimport { extensions as dataSource } from '../data/extensions.json';\n\nconst columns = [\n  {\n    title: 'Extension name (key)',\n    dataIndex: 'key',\n    key: 'extension-name',\n    render: (key, record) => (\n      <div>\n        <strong>{record.name || key}</strong><br />\n        ({key})\n      </div>\n    ),\n    defaultSortOrder: 'ascending',\n    sorter: (a, b) => {\n      if (a.key < b.key) { return -1; }\n      if (a.key > b.key) { return 1; }\n      return 0;\n    }\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status'\n  },\n  {\n    title: 'Version',\n    dataIndex: 'version',\n    key: 'version'\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type'\n  },\n  {\n    dataIndex: 'status',\n    key: 'actions',\n    render: (status) => (\n      <a href=\"/\">{ status === 'enabled' ? 'Disable' : 'Enable' }</a>\n    )\n  }\n];\n\nfunction getRowClass (record) {\n  return record.status === 'disabled' ? 'extension-disabled' : 'extension-enabled';\n}\n\nfunction formatAdditionalData (data) {\n  return Object.keys(data).map(key => {\n    return {\n      title: key,\n      description: data[key]\n    };\n  });\n}\n\nexport default class ExtensionsList extends Component {\n  render () {\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        rowClassName={getRowClass}\n        pagination={false}\n        expandedRowRender={record => {\n          if (!record.additional) {\n            return <p>No additional information available</p>;\n          }\n\n          return <List\n            itemLayout=\"horizontal\"\n            bordered\n            dataSource={formatAdditionalData(record.additional)}\n            renderItem={item => (\n              <List.Item>\n              <List.Item.Meta\n                title={<a href=\"https://ant.design\">{item.title}</a>}\n                description={item.description}\n              />\n              </List.Item>\n            )}\n          />\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Alert, Button, Card } from 'antd';\n\nimport ExtensionsList from '../components/extensions-list';\n\nconst tabList = [\n  { key: 'extensions', tab: 'Extensions' },\n  { key: 'add', tab: 'Add New' }\n];\n\nconst contentList = {\n  extensions: <ExtensionsList />,\n  add: <p>---</p>,\n};\n\nexport default class ExtensionsListPage extends Component {\n  state = {\n    key: 'extensions'\n  }\n\n  onTabChange = (key, type) => {\n    this.setState({ [type]: key });\n  }\n\n  render () {\n    return (\n      <>\n        <Button type=\"primary\" icon=\"reload\" style={{ marginBottom: '25px' }}>Refresh</Button>\n        <Alert message={<div>\n          CiviCRM extensions allow you to install additional features for your site. This page will automatically list the available \"native\" extensions from the CiviCRM.org extensions directory which are compatible with this version of CiviCRM. If you install Custom Searches, Reports or Payment Processor extensions - these will automatically be available on the corresponding menus and screens.<br />\n          You may also want to check the directory for native Drupal modules that may be useful for you (CMS-specific modules are not listed here).\n        </div>} type=\"info\" />\n        <div style={{ marginTop: '25px' }}>\n          <Card\n            tabList={tabList}\n            activeTabKey={this.state.key}\n            onTabChange={(key) => { this.onTabChange(key, 'key'); }}\n            bodyStyle={{ padding: 0 }}>\n            {contentList[this.state.key]}\n          </Card>\n        </div>\n        <Button type=\"primary\" icon=\"reload\" style={{ marginTop: '25px' }}>Refresh</Button>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class FormButtons extends Component {\n  render () {\n    return (\n      <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" icon=\"check\" style={{ marginRight: '10px' }} loading={this.props.submitting}>\n          Save\n        </Button>\n        <Button htmlType=\"button\" icon=\"close\" disabled={this.props.submitting}>\n          Cancel\n        </Button>\n      </FormItem>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Radio, message } from 'antd';\n\nimport FormButtons from '../components/form-buttons';\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nconst defaults = {\n  resourceUrl: '[civicrm.root]/',\n  imageUploadUrl: '[civicrm.files]/persist/contribute/',\n  extensionUrl: '[civicrm.files]/ext/',\n  disableCss: false,\n  forceSSL: false,\n  verifySSL: true\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 10 },\n  },\n};\n\nclass UrlsSettingsForm extends Component {\n  state = {\n    defaults,\n    submitting: false\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({ submitting: true }, () => {\n      setTimeout(() => {\n        this.setState({ submitting: false })\n        message.success('Settings saved!');\n      }, 1000);\n    });\n  }\n\n  render () {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormButtons submitting={this.state.submitting} />\n        <FormItem {...formItemLayout} label=\"CiviCRM Resource URL\">\n          {getFieldDecorator('resource-url', {\n            initialValue: this.state.defaults.resourceUrl\n          })(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Image Upload URL\">\n          {getFieldDecorator('image-upload-url', {\n            initialValue: this.state.defaults.imageUploadUrl\n          })(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Custom CSS URL\">\n          {getFieldDecorator('custom-css-url')(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Disable CiviCRM css\">\n          {getFieldDecorator('disable-civicrm-css', {\n            initialValue: this.state.defaults.disableCss\n          })(\n            <RadioGroup>\n              <Radio value={true}>Yes</Radio>\n              <Radio value={false}>No</Radio>\n            </RadioGroup>\n          )}\n          <div style={{ lineHeight: 1 }}>\n            Prevent the stylesheet \"civicrm.css\" from being loaded.\n          </div>\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Extension Resource URL\">\n          {getFieldDecorator('extension-resource-url', {\n            initialValue: this.state.defaults.extensionUrl\n          })(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Force Secure URLs (SSL)\">\n          {getFieldDecorator('force-secure-urls', {\n            initialValue: this.state.defaults.forceSSL\n          })(\n            <RadioGroup>\n              <Radio value={true}>Yes</Radio>\n              <Radio value={false}>No</Radio>\n            </RadioGroup>\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Verify SSL Certs\">\n          {getFieldDecorator('verify-ssl-certs', {\n            initialValue: this.state.defaults.verifySSL\n          })(\n            <RadioGroup>\n              <Radio value={true}>Yes</Radio>\n              <Radio value={false}>No</Radio>\n            </RadioGroup>\n          )}\n          <div style={{ lineHeight: 1, color: 'red' }}>\n            If disabled, outbound web-service requests will allow unverified, insecure HTTPS connections\n          </div>\n        </FormItem>\n        <FormButtons submitting={this.state.submitting} />\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(UrlsSettingsForm);\n","import React, { Component } from 'react';\nimport { Alert } from 'antd';\n\nimport UrlsSettingsForm from '../forms/urls-settings';\n\nexport default class UrlsSettingsPage extends Component {\n  render () {\n    return (\n      <>\n        <Alert message={<div>\n        These settings define the URLs used to access CiviCRM resources (CSS files, Javascript files, images, etc.)<br />\n        You may configure these settings using absolute URLs or URL variables.\n        </div>} type=\"info\" />\n        <div style={{ marginTop: '25px' }}>\n          <UrlsSettingsForm />\n        </div>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Layout, Divider } from 'antd';\n\nimport MainMenu from './components/main-menu';\nimport ExtensionsListPage from './pages/extensions-list';\nimport UrlsSettingsPage from './pages/urls-settings';\n\nimport './App.css';\n\nconst { Header, Content } = Layout;\n\nexport default class App extends Component {\n  state = {\n    showUrl: true\n  }\n\n  toggleView = e => {\n    e.preventDefault();\n\n    this.setState(prevState => ({\n      showUrl: !prevState.showUrl\n    }))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Header>\n          <nav className=\"main-menu\">\n            <MainMenu />\n          </nav>\n        </Header>\n        <Content style={{ padding: '25px 50px' }}>\n          <div style={{ textAlign: 'center', margin: '10px 20px', fontSize: '20px' }}>\n            <a href=\"/\" onClick={this.toggleView}>\n              {this.state.showUrl ? 'Switch to the extensions page' : 'Switch to the resource URLs page'}\n            </a>\n          </div>\n          <Divider />\n\n          {this.state.showUrl ? <UrlsSettingsPage /> : <ExtensionsListPage />}\n        </Content>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}