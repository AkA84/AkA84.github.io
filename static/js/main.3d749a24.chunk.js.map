{"version":3,"sources":["components/main-menu.js","components/form-buttons.js","components/urls-settings-form.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","menu","MenuDivider","Divider","MainMenu","state","current","handleClick","e","console","log","_this","setState","key","react_default","a","createElement","onClick","this","selectedKeys","mode","theme","style","lineHeight","Item","icon","type","title","Component","FormItem","es_form","FormButtons","es_button","htmlType","marginRight","loading","props","submitting","disabled","RadioGroup","es_radio","Group","defaults","resourceUrl","imageUploadUrl","extensionUrl","disableCss","forceSSL","verifySSL","formItemLayout","labelCol","xs","span","sm","wrapperCol","UrlsSettingsForm","handleSubmit","preventDefault","setTimeout","message","success","getFieldDecorator","form","onSubmit","form_buttons_FormButtons","urls_settings_form_FormItem","Object","assign","label","initialValue","input","value","color","urls_settings_form","create","Header","Content","App","layout","className","main_menu_MainMenu","padding","es_alert","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d749a24.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuDivider = Menu.Divider;\n\nexport default class MainMenu extends Component {\n  state = {\n    current: 'contributions',\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode=\"horizontal\"\n        theme=\"dark\"\n        style={{ lineHeight: '64px' }}\n      >\n        <Menu.Item key=\"search\">\n          <Icon type=\"search\" /> Search\n        </Menu.Item>\n        <SubMenu key=\"contacts\" title={<span><Icon type=\"user\" /><span>Contacts</span></span>}>\n          <SubMenu key=\"new-individual\" title={<span>New Individual</span>}>\n            <Menu.Item key=\"new-student\">New Student</Menu.Item>\n            <Menu.Item key=\"new-parent\">New Parent</Menu.Item>\n            <Menu.Item key=\"new-staff\">New Staff</Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"new-household\">New Household</Menu.Item>\n          <SubMenu key=\"new-organization\" title={<span>New Organization</span>}>\n            <Menu.Item key=\"new-team\">New Team</Menu.Item>\n            <Menu.Item key=\"new-parent\">New Sponsor</Menu.Item>\n          </SubMenu>\n          <MenuDivider />\n          <Menu.Item key=\"contact-reports\">Contact reports</Menu.Item>\n          <MenuDivider />\n          <Menu.Item key=\"find-merge-duplicate\">Find and merge duplicate contacts</Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"contributions\">\n          <Icon type=\"credit-card\" /> Contributions\n        </Menu.Item>\n        <Menu.Item key=\"events\">\n          <Icon type=\"calendar\" /> Events\n        </Menu.Item>\n        <Menu.Item key=\"mailing\">\n          <Icon type=\"mail\" /> Mailing\n        </Menu.Item>\n        <Menu.Item key=\"memberships\">\n          <Icon type=\"idcard\" /> Memberships\n        </Menu.Item>\n        <Menu.Item key=\"reports\">\n          <Icon type=\"bar-chart\" /> Reports\n        </Menu.Item>\n        <Menu.Item key=\"administer\">\n          <Icon type=\"setting\" /> Administer\n        </Menu.Item>\n        <Menu.Item key=\"support\">\n          <Icon type=\"question-circle\" /> Support\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nexport default class FormButtons extends Component {\n  render () {\n    return (\n      <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" icon=\"check\" style={{ marginRight: '10px' }} loading={this.props.submitting}>\n          Save\n        </Button>\n        <Button htmlType=\"button\" icon=\"close\" disabled={this.props.submitting}>\n          Cancel\n        </Button>\n      </FormItem>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, Radio, message } from 'antd';\n\nimport FormButtons from './form-buttons';\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n\nconst defaults = {\n  resourceUrl: '[civicrm.root]/',\n  imageUploadUrl: '[civicrm.files]/persist/contribute/',\n  extensionUrl: '[civicrm.files]/ext/',\n  disableCss: false,\n  forceSSL: false,\n  verifySSL: true\n};\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 5 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 10 },\n  },\n};\n\nclass UrlsSettingsForm extends Component {\n  state = {\n    defaults,\n    submitting: false\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({ submitting: true }, () => {\n      setTimeout(() => {\n        this.setState({ submitting: false })\n        message.success('Settings saved!');\n      }, 1000);\n    });\n  }\n\n  render () {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n\n      <Form onSubmit={this.handleSubmit}>\n        <FormButtons submitting={this.state.submitting} />\n        <FormItem {...formItemLayout} label=\"CiviCRM Resource URL\">\n          {getFieldDecorator('resource-url', {\n            initialValue: this.state.defaults.resourceUrl\n          })(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Image Upload URL\">\n          {getFieldDecorator('image-upload-url', {\n            initialValue: this.state.defaults.imageUploadUrl\n          })(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Custom CSS URL\">\n          {getFieldDecorator('custom-css-url')(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Disable CiviCRM css\">\n          {getFieldDecorator('disable-civicrm-css', {\n            initialValue: this.state.defaults.disableCss\n          })(\n            <RadioGroup>\n              <Radio value={true}>Yes</Radio>\n              <Radio value={false}>No</Radio>\n            </RadioGroup>\n          )}\n          <div style={{ lineHeight: 1 }}>\n            Prevent the stylesheet \"civicrm.css\" from being loaded.\n          </div>\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Extension Resource URL\">\n          {getFieldDecorator('extension-resource-url', {\n            initialValue: this.state.defaults.extensionUrl\n          })(<Input />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Force Secure URLs (SSL)\">\n          {getFieldDecorator('force-secure-urls', {\n            initialValue: this.state.defaults.forceSSL\n          })(\n            <RadioGroup>\n              <Radio value={true}>Yes</Radio>\n              <Radio value={false}>No</Radio>\n            </RadioGroup>\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Verify SSL Certs\">\n          {getFieldDecorator('verify-ssl-certs', {\n            initialValue: this.state.defaults.verifySSL\n          })(\n            <RadioGroup>\n              <Radio value={true}>Yes</Radio>\n              <Radio value={false}>No</Radio>\n            </RadioGroup>\n          )}\n          <div style={{ lineHeight: 1, color: 'red' }}>\n            If disabled, outbound web-service requests will allow unverified, insecure HTTPS connections\n          </div>\n        </FormItem>\n        <FormButtons submitting={this.state.submitting} />\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(UrlsSettingsForm);\n","import React, { Component } from 'react';\nimport { Alert, Layout } from 'antd';\n\nimport MainMenu from './components/main-menu';\nimport UrlsSettingsForm from './components/urls-settings-form';\n\nimport './App.css';\n\nconst { Header, Content } = Layout;\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Header>\n          <nav className=\"main-menu\">\n            <MainMenu />\n          </nav>\n        </Header>\n        <Content style={{ padding: '25px 50px' }}>\n          <Alert message={<div>\n            These settings define the URLs used to access CiviCRM resources (CSS files, Javascript files, images, etc.)<br />\n            You may configure these settings using absolute URLs or URL variables.\n          </div>} type=\"info\" />\n          <div style={{ marginTop: '25px' }}>\n            <UrlsSettingsForm />\n          </div>\n        </Content>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}